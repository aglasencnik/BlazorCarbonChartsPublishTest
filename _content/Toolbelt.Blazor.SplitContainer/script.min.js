const t="pointerdown",i="pointermove",r="pointerup",u="touchstart",n=null;export const attach=(f,e)=>{const o={dir:0,resizeTarget:-1,pivot:0,initSize:0,disposed:!1,dispose:n},s=e.querySelector(":scope > .spliter-bar"),h=Array.from(e.querySelectorAll(":scope > .pane-of-split-container")),a=Math.round,v=(n,t)=>a(n===0?t.clientX:t.clientY),y=(n,t)=>a((t=>n===0?t.width:t.height)(h[t].getBoundingClientRect())),c=(n,t,i,r)=>{n.addEventListener(t,i,r)},l=(n,t,i)=>{n.removeEventListener(t,i)},p=t=>{const i=o.resizeTarget,r=h[i]||n;if(r===n)return[n,0];const f=r.style,u=o.dir,s=v(u,t),c=s-o.pivot,e=o.initSize+(i==0?1:-1)*c+"px";return u===0?f.width=e:f.height=e,[r,y(u,i)]},w=n=>{p(n)},b=n=>{if(!document.contains(s)){o.dispose();return}const t=h.findIndex(n=>n.style.flex==="");if(t!==-1){const r=e.classList.contains("splitter-orientation-vertical")?0:1;o.dir=r;o.resizeTarget=t;o.pivot=v(r,n);o.initSize=y(r,t);c(s,i,w);s.setPointerCapture(n.pointerId)}},k=n=>{s.releasePointerCapture(n.pointerId);l(s,i,w);const[t,r]=p(n);f.invokeMethodAsync("UpdateSize",t===h[0],r)},d=n=>n.preventDefault();return c(s,t,b),c(s,r,k),c(s,u,d,{passive:!1}),o.dispose=()=>{o.disposed||(o.disposed=!0,l(s,t,b),l(s,r,k),l(s,u,d))},o};